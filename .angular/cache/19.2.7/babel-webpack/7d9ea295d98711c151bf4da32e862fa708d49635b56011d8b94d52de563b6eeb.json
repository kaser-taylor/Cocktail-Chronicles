{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// the injectable decorator allows dependency injection the provided in 'root' makes it available globally\nexport let CocktailCardService = /*#__PURE__*/(() => {\n  class CocktailCardService {\n    http;\n    // this creates a private variable of the base url. it helps us not repeat the url\n    baseUrl = 'https://www.thecocktaildb.com/api/json/v1/1';\n    // injects the http client and gives it the refrence name http\n    constructor(http) {\n      this.http = http;\n    }\n    // creates a function that takes a cocktail id in the form of a string as an argument and \n    getCocktailDetailsById(cocktailId) {\n      // So what this does is create a get http request that accepts any type of response. this.http refers the http module that we injected into this service. its also important to remember that this.http.get returns an observable which is essentially a stream of data\n      return this.http.get(`${this.baseUrl}/lookup.php?i=${cocktailId}`);\n    }\n    static ɵfac = function CocktailCardService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CocktailCardService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CocktailCardService,\n      factory: CocktailCardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CocktailCardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}