{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CocktailService = /*#__PURE__*/(() => {\n  class CocktailService {\n    http;\n    apiUrl = 'https://www.thecocktaildb.com/api/json/v1/1';\n    constructor(http) {\n      this.http = http;\n    }\n    searchByName(name) {\n      return this.http.get(`${this.apiUrl}/search.php?s=${name}`).pipe(catchError(this.handleError));\n    }\n    searchByIngredient(ingredient) {\n      return this.http.get(`${this.apiUrl}/filter.php?i=${ingredient}`).pipe(catchError(this.handleError));\n    }\n    handleError(error) {\n      console.error('API Error', error);\n      return throwError(() => new Error('Something went wrong. Please Try Again.'));\n    }\n    static ɵfac = function CocktailService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CocktailService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CocktailService,\n      factory: CocktailService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CocktailService;\n})();","map":{"version":3,"names":["throwError","catchError","CocktailService","http","apiUrl","constructor","searchByName","name","get","pipe","handleError","searchByIngredient","ingredient","error","console","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/taylorkaser/coding/Cocktail-Chronicles/src/app/services/cocktail.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CocktailService {\n    private apiUrl = 'https://www.thecocktaildb.com/api/json/v1/1';\n\n    constructor(private http: HttpClient) {}\n\n    searchByName(name: string): Observable<any> {\n        return this.http.get(`${this.apiUrl}/search.php?s=${name}`).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    searchByIngredient(ingredient: string): Observable<any> {\n        return this.http.get(`${this.apiUrl}/filter.php?i=${ingredient}`).pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    private handleError(error: any) {\n        console.error('API Error', error);\n        return throwError(() => new Error('Something went wrong. Please Try Again.'));\n    }\n}"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,WAAaC,eAAe;EAAtB,MAAOA,eAAe;IAGJC,IAAA;IAFZC,MAAM,GAAG,6CAA6C;IAE9DC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvCG,YAAYA,CAACC,IAAY;MACrB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,iBAAiBG,IAAI,EAAE,CAAC,CAACE,IAAI,CAC5DR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAC/B;IACL;IAEAC,kBAAkBA,CAACC,UAAkB;MACjC,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,iBAAiBQ,UAAU,EAAE,CAAC,CAACH,IAAI,CAClER,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAC/B;IACL;IAEQA,WAAWA,CAACG,KAAU;MAC1BC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjC,OAAOb,UAAU,CAAC,MAAM,IAAIe,KAAK,CAAC,yCAAyC,CAAC,CAAC;IACjF;;uCApBSb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAfjB,eAAe;MAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;MAAAC,UAAA,EAFZ;IAAM;;SAETpB,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}