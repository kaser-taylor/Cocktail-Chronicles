{"ast":null,"code":"// So the forms module basically connects the form the backend component logic to direct the play, enables that two way data binding we were looking up\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/search.service\";\nimport * as i2 from \"@angular/forms\";\n// Now we have out component\n// remember export allows us to use it in other parts of our project\nexport let SearchBarComponent = /*#__PURE__*/(() => {\n  class SearchBarComponent {\n    searchService;\n    // now we need to create the variable that holds the search term of the user. Remember that this is typescript so we have to declare the type\n    searchTerm = '';\n    // so this enables the dependency injection of search service into this class. We will be using this to push searchTerm to the other components\n    constructor(searchService) {\n      this.searchService = searchService;\n    }\n    onSearch() {\n      // creates a trimmed version of the term for the API\n      const trimmedTerm = this.searchTerm.trim();\n      // if trimmed term is truthy (if there is one) then sets the search service search term\n      if (trimmedTerm) {\n        this.searchService.setSearchTerm(trimmedTerm);\n      }\n    }\n    static ɵfac = function SearchBarComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SearchBarComponent)(i0.ɵɵdirectiveInject(i1.SearchService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SearchBarComponent,\n      selectors: [[\"app-search-bar\"]],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"search-container\"], [\"type\", \"text\", \"placeholder\", \"search cocktails ...\", 1, \"search-input\", 3, \"ngModelChange\", \"keyup.enter\", \"ngModel\"], [3, \"click\"]],\n      template: function SearchBarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function SearchBarComponent_Template_input_ngModelChange_1_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.searchTerm, $event) || (ctx.searchTerm = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"keyup.enter\", function SearchBarComponent_Template_input_keyup_enter_1_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function SearchBarComponent_Template_button_click_2_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵtext(3, \" Search\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.searchTerm);\n        }\n      },\n      dependencies: [FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      encapsulation: 2\n    });\n  }\n  return SearchBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}